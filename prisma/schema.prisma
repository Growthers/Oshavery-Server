datasource db {
  provider = "mysql"
  url      = ""
}

generator client {
  provider = "prisma-client-js"
}

model messages {
  id      String @id @default(uuid())
  content String
  ip      String

  created_at DateTime  @default(now())
  updated_at DateTime?
  deleted_at DateTime?

  guild      guilds   @relation(fields: [guild_id], references: [id])
  guild_id   String
  channels   channels @relation(fields: [channel_id], references: [id])
  channel_id String
  user       users?   @relation(fields: [userId], references: [id])
  userId     String?
}

model invitations {
  id       String    @id @default(uuid())
  enable   Boolean   @default(false)
  max      Int?
  count    Int       @default(0)
  deadline DateTime?

  guild      guilds?   @relation(fields: [guildsId], references: [id])
  guildsId   String?
  channels   channels? @relation(fields: [channelsId], references: [id])
  channelsId String?
}

model channels {
  id    String  @id @default(uuid())
  name  String
  type  String
  topic String?

  position    Int
  messages    messages[]
  invitations invitations[]
  created_at  DateTime      @default(now())
  updated_at  DateTime?
  deleted_at  DateTime?
}

model guilds {
  id                   String                 @id @default(uuid())
  name                 String
  topic                String?
  created_at           DateTime               @default(now())
  updated_at           DateTime?
  deleted_at           DateTime?
  messages             messages[]
  invitations          invitations[]
  users                users[]
  guild_users_mappings guild_users_mappings[]
}

model guild_users_mappings {
  id   String @id @default(uuid())
  name String

  guild    guilds? @relation(fields: [guild_id], references: [id])
  guild_id String?
  users    users?  @relation(fields: [usersId], references: [id])
  usersId  String?
}

model users {
  id                   String                 @id @default(uuid())
  name                 String
  bot                  Boolean
  origin               String
  messages             messages[]
  guild_users_mappings guild_users_mappings[]
  guilds               guilds?                @relation(fields: [guildsId], references: [id])
  guildsId             String?
}
